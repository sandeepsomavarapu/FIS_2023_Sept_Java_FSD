


Language:-
===========

		communication human
 english-->26

Programming Language:
======================== 
		communication with machine
		
		program/instructions--->PL
		
java,c++,python,.net,c
Functions						objects
	POP							OOP
B,C,BCPL,COBOL,PHOTON..		java,c++,python,.net

			1)PERFORMANCE	INHERITANCE,POLYMORPHISAM
			2)SECURITY		ABSTRACTION,ENCAPSULATION
	
			OOPS FEATURES
	
			PYTHON IS OOPL	-->PI
	
	why python		1993	1.x
							3.x
	guido van russam
	
	1)simple
	
	
	
		welcome to java
	53 	
	Welcome.java
	
	class Welcome
	{
	public static void main(String args[])
	{
	System.out.println("welcome to java");
	}
	}
	
	33 keywords
	
	
	1)functional programming features C
	2) OOP features  c++
	3) scripting language features from perl,shell script
	4)modula programming from modula-3
	
	
		the complete monty python circus

		
		Applications
		
		1)dekstop/standalone ex:notepadd++,antivirus,media players,...etc corepython,tkinter
		2)web applications	 ex:gmail,fb,insta,amazon....URL    django,flask
		3)db applications     pdbc
		4)network programming
		5)gaming
		6)Data scince
		7)IOT
		8)AI
		9)ML
		
		we can't develop mobile applications
		
	Features	
		1)simple
		2)open source  & free source 	ex: jython,cpython,rubypython,ironpython
		
Identifiers:
============		
		python dynamic typed programming language
		
		
		int a=123;//java static typed PL
		
			b=234; //dynamic typed PL
			
		
		a-z
		A-z
		0-9
		_
		
	 import keyword
>>> keyword.kwlist
['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 
'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 
'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal',
 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']	
		
		
		
Datatypes:
==========
	 varname=vlaue;
	
	int
	float
	complex
	bool
	str
	range
	
	list
	set
	tuple
	frozenset
	dict
	None
		
		
		
	type()
	id()
	print()
		
	int()
	float()
	str()
	bool()
	complex()	
		
		a=123
		a=234
		print(a)//234
		
list
tuple
set
frozenset
dict		
				array-->homogeneous,fixed in size
LIST:
=====slicing
group of values as single entity
 where the insertion order is preserved and duplicates are allowed 

	1)insertion order is preserved 
	2)duplicates are allowed
	3)both homogeneous and haterogeneous data is allowed
	4)growable in nature or not fixed in size
	5)[] square brackets
	6)list muttable

muttable/imuttable

TUPLE:
=======
group of values as single entity
 where the insertion order is preserved and duplicates are allowed 

	1)insertion order is preserved 
	2)duplicates are allowed
	3)both homogeneous and haterogeneous data is allowed
	4)() parentheses
	5)tuple imuttable

SET:
====
group of values as single entity
 where the insertion order is not preserved and duplicates are not allowed 

	1)insertion order is not preserved 
	2)duplicates are not allowed
	3)both homogeneous and haterogeneous data is allowed
	4)growable in nature or not fixed in size
	5){}
	6)set muttable


FrozenSET:
==========
group of values as single entity
 where the insertion order is not preserved and duplicates are not allowed 

	1)insertion order is not preserved 
	2)duplicates are not allowed
	3)both homogeneous and haterogeneous data is allowed
	4)growable in nature or not fixed in size
	5)frozenset({})
	6)frozenset imuttable
	
Dict:
=====
key,value

	1)key ,value can be any data type and both homogeneous , haterogeneous
	2)key must be unique,value can be duplicate
	3){}
	4)dict is muttable
	
	
C:\Users\SANDEEP>py
Python 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> contact=99999999
>>> print(contact)
99999999
>>> type(contact)
<class 'int'>
>>> emps=['suresh','mahesh','naresh','rajesh','suresh']
>>> print(emps)
['suresh', 'mahesh', 'naresh', 'rajesh', 'suresh']
>>> type(emps)
<class 'list'>
>>> emps.append(1234)
>>> type(emps)
<class 'list'>
>>> print(emps)
['suresh', 'mahesh', 'naresh', 'rajesh', 'suresh', 1234]
>>> emps.remove('suresh')
>>> print(emps)
['mahesh', 'naresh', 'rajesh', 'suresh', 1234]
>>> print(emps)
['mahesh', 'naresh', 'rajesh', 'suresh', 1234]
>>> print(emps[1:3])
['naresh', 'rajesh']
>>> print(emps[1:5])
['naresh', 'rajesh', 'suresh', 1234]
>>> print(emps[1])
naresh
>>> print(emps[0])
mahesh
>>> print(emps[-1])
1234
>>> print(emps[-1:-4])
[]
>>> print(emps[-1:])
[1234]
>>> print(emps[-1:3])
[]
>>> print(emps[-2])
suresh
>>> print(emps[-3])
rajesh
>>> print(emps[-4:-1])
['naresh', 'rajesh', 'suresh']
>>> t=(12,True,'mahesh','naresh','mahesh',False)
>>> type(t)
<class 'tuple'>
>>> t.append('few are sleeping')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'tuple' object has no attribute 'append'
>>> print(t)
(12, True, 'mahesh', 'naresh', 'mahesh', False)
>>> names={'mahesh','rajesh','naresh','mahesh'}
>>> type(names)
<class 'set'>
>>> print(names)
{'rajesh', 'mahesh', 'naresh'}
>>> names.add('feeling sleepy')
>>> print(names)
{'rajesh', 'mahesh', 'feeling sleepy', 'naresh'}
>>> names.add(111)
>>> print(names)
{'mahesh', 111, 'rajesh', 'feeling sleepy', 'naresh'}
>>> names.remove('mahesh')
>>> print(names)
{111, 'rajesh', 'feeling sleepy', 'naresh'}
>>> names1={'mahesh','rajesh','naresh','mahesh'}
>>> type(names1)
<class 'set'>
>>> names2=frozenset(names1)
>>> names1.add('fis')
>>> print(names1)
{'fis', 'rajesh', 'mahesh', 'naresh'}
>>> names2.add('fis')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AttributeError: 'frozenset' object has no attribute 'add'
>>> type(names2)
<class 'frozenset'>
>>> students={111:'mahesh',222:'rajesh',333:'suresh','222','lenovo'}
  File "<stdin>", line 1
    students={111:'mahesh',222:'rajesh',333:'suresh','222','lenovo'}
                                                         ^
SyntaxError: ':' expected after dictionary key
>>> students={111:'mahesh',222:'rajesh',333:'suresh','222':'lenovo'}
>>> type(students)
<class 'dict'>
>>> print(students)
{111: 'mahesh', 222: 'rajesh', 333: 'suresh', '222': 'lenovo'}
>>> students1={111:'mahesh',222:'rajesh',333:'suresh',222:'lenovo'}
>>> print(students1)
{111: 'mahesh', 222: 'lenovo', 333: 'suresh'}
>>> students1[555]='dell'
>>> print(students1)
{111: 'mahesh', 222: 'lenovo', 333: 'suresh', 555: 'dell'}
>>>	



input():dynamic 



You're trying to use k (which is a list) as a key for d. 
Lists are mutable and can't be used as dict keys


.java
python 

	.py


flow control statement

if,else,elif,for,while


Functions:
============

		


		a =12;
		b=13;
	result=a+b


		a1=100;
		b1=200;
	result1=a1+b1;	


def addOfTwo(a,b):
	result=a+b


	addOfTwo(12,13)
	addOfTwo(100,200)

Task1:
=======
function and input 

username 
password 



	uname  fisglobal
	pass   fis@123


		login success
		
	enter valid credetials


OOPS:
=====
	class:collection of data members and member functions  class 
	object :an instance of class 

		obj=Employee()

instance and static





local variables
global variables ---> instance and static 



instance variable:
====================

class Employee:
	empId=123;
	orgName="fis global"		static

	emp1=Employee(111);
	emp2=Employee(112);

where we can instance variable
	1)inside the constructor by using self
	2)inside the instance  by using self
	3)outside the class by using obj reference 

Static Variables(class variables):
=================
	not varied from object to object 
	outside the method and with in the class 

1)inside constructor by using classname 
2)inside instance method  by using classname 
3)classname 

functions/methods
methods:

instance methods :self  objref
class methods	:cls 	@classmethod
static methods	:@staticmethod






OOPS:
-----
Inheritance:
------------
	CODE REUSABILITY
	
	
	class A:
		
		
		200 methods
	
	
	class B(A):
	
		20 methods

MI supported by python


abstraction:

exception handling

files 

numpy,pandas,rest api access

case study


method 

abstract method :method with out body


concrete method :method with body/implementation



ENCAPSULATION:
wrapping data and corresponding methods together


Exception Handling :

1.system defined error message 
2.abnormal termination	

class A:
1
2 .....error -->stop-->abnormal termination-->system defined error 


try-->error code ,except--->handling code,finally--->clean up code,raise -->to throw an exception explicitly


1.user friendly  error message 
2.normal termination	

user defined exception

	1)class A(Exception)
	2)param constructor



py--->file -->write and read and append


pickling 
unpickling

python object 

write
read


Multi Threading:
=================


Multi Tasking:
=============
	executing multiple tasks simultaneously -->
			
Process based multi tasking
executing multiple tasks simultaneously where each task is seperate independent process							
						ex:laptop with teams,notepad,vscode,eclipse...
Thread based multi tasking(multi threading)
executing multiple tasks simultaneously where each and every task is belongs to same process							
						ex:laptop with teams -->mic,video,screen,chat....

			process is collection of threads
			thread is a smallest unit of process




class A:
1
2 2 hours
3







10000



3 ways
1)creating a thread without using any class
2)creating a thread by extending Thread class
3)creating a thread with out extending Thread class



mainThread


start

Webservices:
============
		

REST API


SQL:

DATA:
======
	eid ename salary email username..........


	files  -->small amount of data 

	databases -->its container oracle,mysql,db2,postgres,mongodb(nosql).....


	data --->organise
	

	java --->database
	python--->database 

MYSQL--->SQL


querys

	DDL,DML,DRL

RDBMS--->tables-->rows and columns



table 	column/properties
		eid  ename  esal	eadd
		123	   x    100		hyd		rows/records/data
		124	   y    450		hyd
		129	   z    785		hyd
		127	   a    198		hyd
		125	   b    777		hyd

MYSQL	

	client 		workbench(GUI)

DDL:-->create,alter,drop,truncate,rename

DML:-->insert,uppdate,delete

DRL:-->select



create database fisglobal;
use fisglobal;
create table fis_emps(empid int,empname varchar(12),esal float,eadd varchar(15));
describe fis_emps;
alter table fis_emps add empdesg varchar(10);
alter table fis_emps drop eadd;
alter table fis_emps change empid empno int;#to rename column name 
alter table fis_emps modify empno varchar(10);#to modify data type of a column
alter table fis_emps rename to emps;
describe emps;
truncate table emps;#will make table as empty(records)
drop table emps;#will delete the table

#DML
describe fis_emps;
insert into fis_emps values(111,'suresh',9000,'hyderabad');
insert into fis_emps values(121,'naresh',45000,'delhi');
insert into fis_emps values(131,'rajesh',18000,'banglore');
insert into fis_emps values(141,'mahesh',7500,'hyderabad');
insert into fis_emps values(151,'somesh',12500,'banglore');
select * from fis_emps;
alter table fis_Emps drop column edesg;
select empname from fis_emps;
select empid,empname,esal from fis_emps;
select * from fis_emps where esal between 5000 and 15000;
insert into fis_emps(empid,empname,esal) values(222,'nihasvi',32000);
update fis_emps set esal=esal+3000;
update fis_emps set esal=esal+1000 where eadd='hyderabad';
SET SQL_SAFE_UPDATES = 0;
alter table fis_emps add column edesg varchar(10);
insert into fis_emps(edesg) values('developer');
update fis_emps set edesg='developer' where eadd='hyderabad';
delete from fis_Emps where eadd='hyderabad';
truncate table fis_emps;
select max(esal) from fis_emps;
select min(esal) from fis_emps;
select avg(esal) from fis_emps;
select sum(esal) from fis_emps;
select count(empname) from fis_emps;
select max(esal) from fis_emps where esal<(select max(esal) from fis_emps);
select * from fis_emps limit 3;
select * from fis_emps where empname like "s%";
select * from fis_emps where eadd like "%bad";
select * from fis_emps where empname in('suresh','somesh','sandeep');
select upper(empname) from fis_emps;
select lower(empname) from fis_emps;
select length(eadd) from fis_emps;
select * from fis_emps order by empname  like 's%' asc;
select * from fis_emps order by empname desc;
select * from fis_emps where eadd='hyderabad' limit 1;
select * from fis_emps where eadd='hyderabad' and esal<10000 limit 1 ;

# Display `ename of department deptno earned commission $' for each salesman in reverse salary order

#constraints
select * from emp1;
create table emp1(eid int,ename varchar(10),esal int,eadd varchar(15));
insert into emp1 values(123,'suresh',89000,'hyderabad');
insert into emp1(ename) values('sandeep');
insert into emp1(esal) values(-5000);
insert into emp1(eid,esal) values(111,23000);
#notnull,unique,primary key,check,foreign key
create table emp2(eid int,ename varchar(10) not null,esal int,eadd varchar(15));
insert into emp2 values(123,'suresh',89000,'hyderabad');
select * from emp3;
insert into emp2(eid,esal,eadd) values(111,23000,'hyd');
create table emp3(eid int unique,ename varchar(10) not null,esal int,eadd varchar(15));
insert into emp3 values(123,'suresh',89000,'hyderabad');
insert into emp3(ename,esal,eadd) values('suresh',89000,'hyderabad');
#primary key=nn+unique
create table emp4(eid int primary key,ename varchar(10) not null,esal int,eadd varchar(15));
insert into emp4 values(123,'suresh',89000,'hyderabad');
insert into emp4(ename,esal,eadd) values('suresh',89000,'hyderabad');
select * from emp4;
#Check 
create table emp5(eid int primary key,ename varchar(10)not null,esal int,eadd varchar(15),check(length(ename)>5));
insert into emp5 values(121,'mahesh',89000,'banglore');
insert into emp5 values(122,'hi',89000,'banglore');

drop table dept;
drop table emp;
CREATE TABLE dept(
    deptno INT,
    dname VARCHAR(14),
    loc VARCHAR(13),
	constraint pk_dept primary key (deptno)
);

INSERT INTO dept(deptno, dname, loc) VALUES
(10, 'ACCOUNTING', 'NEW YORK'),
(20, 'RESEARCH', 'DALLAS'),
(30, 'SALES', 'CHICAGO'),
(40, 'OPERATIONS', 'BOSTON');

CREATE TABLE emp(
    empno INT,
    ename VARCHAR(10),
    job VARCHAR(9),
    mgr INT,
    hiredate DATE,
    sal DECIMAL(7,2),
    comm DECIMAL(7,2),
    deptno INT,
   constraint pk_emp primary key (empno),
   constraint fk_deptno foreign key (deptno) references dept (deptno) 
);
INSERT INTO emp VALUES
(7839, 'KING', 'PRESIDENT', null, '1981-11-17', 5000, null, 10),
(7698, 'BLAKE', 'MANAGER', 7839,'1981-05-01', 2850, null, 30),
(7782, 'CLARK', 'MANAGER', 7839, '1981-06-09', 2450, null, 10),
(7566, 'JONES', 'MANAGER', 7839, '1981-04-02',2975, null, 20),
(7788, 'SCOTT', 'ANALYST', 7566, '1981-04-19',3000, null, 20),
(7902, 'FORD', 'ANALYST', 7566, '1981-03-12', 3000, null, 20),
(7369, 'SMITH', 'CLERK', 7902,'1980-12-17', 800, null, 20),
(7499, 'ALLEN', 'SALESMAN', 7698,'1981-02-20', 1600, 300, 30),
(7521, 'WARD', 'SALESMAN', 7698, '1981-02-22',1250, 500, 30),
(7654, 'MARTIN', 'SALESMAN', 7698,'1981-09-28',1250, 1400, 30),
(7844, 'TURNER', 'SALESMAN', 7698,'1981-09-08',1500, 0, 30),
(7876, 'ADAMS', 'CLERK', 7788, '1987-05-23',1100, null, 20),
(7900, 'JAMES', 'CLERK', 7698,'1981-03-12',950, null, 30),
(7934, 'MILLER', 'CLERK', 7782,'1982-01-23',1300, null, 10);

select * from emp;
select * from dept;
delete from dept where deptno=10;
drop table emp;
drop table  dept;
select empno,ename,job from emp;
select * from dept;
select * from emp;
insert into emp(empno,ename,job) values(123,'sleeping','developer');
select e.empno,e.ename,job,dname,d.deptno from emp e,dept d;#Cross Join all possible records 
select e.empno,e.ename,job,dname,d.deptno from emp e,dept d where e.deptno=d.deptno ;#Inner Join will fetch only matching records

select e.empno,e.ename,job,dname,d.deptno from emp e left outer join dept d on e.deptno=d.deptno;#left outer Join will fetch all the  records from left side table and right sinde only matching records

select e.empno,e.ename,job,dname,d.deptno from emp e right outer join dept d on e.deptno=d.deptno;#left outer Join will fetch all the  records from left side table and right sinde only matching records

select e.empno,e.ename,job,dname,d.deptno from emp e  join dept d on e.deptno=d.deptno;#left outer Join will fetch all the  records from left side table and right sinde only matching records
select e.empno,e.ename,job,dname,d.deptno from emp e left outer join dept d on e.deptno=d.deptno
union
select e.empno,e.ename,job,dname,d.deptno from emp e right outer join dept d on e.deptno=d.deptno;

select e.empno,e.ename,job,dname,d.deptno from emp e left outer join dept d on e.deptno=d.deptno
union all
select e.empno,e.ename,job,dname,d.deptno from emp e right outer join dept d on e.deptno=d.deptno;

SELECT COALESCE(null,null,'sandeep',null,'mahesh') from dual;

select deptno,sum(sal) from emp group by deptno;

select deptno,min(sal) from emp group by deptno;

select deptno,max(sal) from emp group by deptno;

SELECT ename, sal + comm AS total
FROM Emp
ORDER BY total DESC;
select * from emp e  order by deptno , sal desc;
SELECT SAL FROM EMP WHERE EMPNO=7499;
#single row subquery
SELECT * FROM EMP WHERE SAL!=(SELECT SAL FROM EMP WHERE EMPNO=7499);
SELECT * FROM EMP WHERE SAL>(SELECT SAL FROM EMP WHERE EMPNO=1111);
SELECT * FROM EMP WHERE SAL<(SELECT SAL FROM EMP WHERE EMPNO=7499);
SELECT * FROM EMP WHERE SAL>(SELECT avg(SAL) FROM EMP );
#multi row subquery

SELECT * FROM emp   
WHERE sal > ANY (SELECT sal FROM emp WHERE sal BETWEEN 2500 AND 4000);

SELECT * FROM emp   
WHERE sal > ANY (SELECT sal FROM emp WHERE sal BETWEEN 2500 AND 4000 )order by sal desc;

SELECT * FROM emp   
WHERE sal > All (SELECT sal FROM emp WHERE sal BETWEEN 2500 AND 4000);

SELECT * FROM emp   
WHERE sal IN (SELECT sal FROM emp WHERE sal BETWEEN 2500 AND 4000);
SELECT * FROM emp   
WHERE sal not IN (SELECT sal FROM emp WHERE sal BETWEEN 2500 AND 4000);

SELECT D.* FROM DEPT D WHERE EXISTS(SELECT E.EMPNO FROM EMP E WHERE  E.DEPTNO=D.DEPTNO);
SELECT D.* FROM DEPT D WHERE not EXISTS(SELECT E.EMPNO FROM EMP E WHERE  E.DEPTNO=D.DEPTNO);
select * from emp;
select * from dept;

SELECT * FROM emp WHERE sal =
 ( SELECT max(sal) FROM emp WHERE sal < 
 ( SELECT max(sal) FROM EMP));
SELECT empno, ename, sal, (SELECT max(sal) FROM emp) maxsal FROM emp; 
SELECT ename, sal FROM (SELECT * FROM emp e ORDER BY e.sal) as ex; 	
SELECT empno, ename, sal, deptno FROM emp WHERE deptno IN(SELECT deptno FROM dept WHERE loc='CHICAGO'); 









Foreign Key:
============

emp_dept_info
eid    ename   esal    eadd       deptno    dname   dloc 

1     	x		100		hyd		    10		sales	 india 
2     	y		200		delhi		20		admin	 US
3     	z		300		banglore	10		sales	 india 
4     	a		250		hyd			30		training UK 
5     	b		540		noida		20		admin	 US 
6     	c		320		pune		30		training UK 







10 -->sales--->100000
20--->admin--->50000
30--->training--->70000


emp
									FK
eid    ename   esal    eadd       deptno   

1     	x		100		hyd		    10		
2     	y		200		delhi		20		
3     	z		300		banglore	10		
4     	a		250		hyd			30		
5     	b		540		noida		20		
6     	c		320		pune		30		


dept PK
     deptno    dname   dloc 

    10		sales	 india 
	20		admin	 US
	30		training UK 

foreign key

Joins:
======



Constraints:
============
1. create table without constraints and add constraints ?

2. create table with foreign key constraint ?

3. Add constraint with out name in alter level ?

4. Add composite primary key on two attributes ?

5. Add foreign key constraint with out name in alter level ? 

Joins :
==========

1. Display the name of each employee with his department name.

2. Display a list of all departments with the employees in each department.

3. Display all the departments with the manager for that department.

4. Display the names of each employee with the name of his/her boss.

5. Display the names of each employee with the name of his/her boss with a blank for the boss of the
president.

6. Display the employee number and name of each employee who manages other employees with the
number of people he or she manages.

Answer:
=======
SELECT m.empno, m.ename, count(*) as noofemp
FROM Emp e  join Emp m on (m.empno = e.mgr)
GROUP BY m.empno,m.ename

7. Repeat the display for the last question, but this time display the rows in descending order of the
number of employees managed.



Sub Querys:
============

a select query in side another select query 

	select columns from emp where ename='';

	suquery

		SELECT CLAUSE
		FROM CLAUSE
		WHERE CLAUSE

	>,<,=

IN,ANY,ALL,SOME

SELECT (SELECT):SCALAR

		7499  
						
SELECT * FROM EMP WHERE SAL>(SELECT SAL FROM EMP WHERE EMPNO=7499)



										2850.00
										2975.00
										3000.00
										3000.00

index 
sal				

21				2
11				3	
29				3
2				11
112				11
312				21
11				22	
22				29	
65				65
3				66
343				112
66				312	
3				343


select * from emp where sal=3 




pivot
	it spilts the unique values from one column into many columns


OLTP  VS  OLAP


OLAP
online analytical processing  :data analysis spotify

OLTP
online transactional processing 














  CREATE TABLE employee
  (
      id INT PRIMARY KEY,
      name VARCHAR(50) NOT NULL,
      gender VARCHAR(50) NOT NULL,
      salary INT NOT NULL,
      department VARCHAR(50) NOT NULL
   )
   
   
    INSERT INTO employee
  VALUES
  (1, 'David', 'Male', 5000, 'Sales'),
  (2, 'Jim', 'Female', 6000, 'HR'),
  (3, 'Kate', 'Female', 7500, 'IT'),
  (4, 'Will', 'Male', 6500, 'Marketing'),
  (5, 'Shane', 'Female', 5500, 'Finance'),
  (6, 'Shed', 'Male', 8000, 'Sales'),
  (7, 'Vik', 'Male', 7200, 'HR'),
  (8, 'Vince', 'Female', 6600, 'IT'),
  (9, 'Jane', 'Female', 5400, 'Marketing'),
  (10, 'Laura', 'Female', 6300, 'Finance'),
  (11, 'Mac', 'Male', 5700, 'Sales'),
  (12, 'Pat', 'Male', 7000, 'HR'),
  (13, 'Julie', 'Female', 7100, 'IT'),
  (14, 'Elice', 'Female', 6800,'Marketing'),
  (15, 'Wayne', 'Male', 5000, 'Finance')



  SELECT department, sum(salary) as Salary_Sum
  FROM employee
  GROUP BY department
  
  
   SELECT coalesce (department, 'All Departments') AS Department,
  sum(salary) as Salary_Sum
  FROM employee
  GROUP BY ROLLUP (department)

  SELECT
  coalesce (department, 'All Departments') AS Department,
  coalesce (gender,'All Genders') AS Gender,
  sum(salary) as Salary_Sum
  FROM employee
  GROUP BY ROLLUP (department, gender)
  
  
  
  
  
  
  
https://www.databasestar.com/hierarchical-data-sql/


https://www.geeksforgeeks.org/difference-between-star-schema-and-snowflake-schema/

  
  FrontEnd:
  ============
  
  HTML:
  
  Website:webpages 
			
				1)static webpages		 fixed 		fb  loginpage
				2)dynamic webpages		not fixed 		homepage
  
  
  
  HTML:hyper text markup lang
  
  <>  </>
  tim berners lee 1990
  
  1996 w3c
  
  ISO 2000
  
  html5
  
  
  welcome.html-->predefined 
  
  browser -->engine 
  
  google-->v8 
  mozilla-->spider monkey
  IE--->chakra 
  
  DOM

  
  table,tr,td,thead,th,tbody
  ordered unordered 
  Form Tags
  
  
  CSS:
  ====
	cascading style sheet
	
 we can apply styles to html content
	
		3 ways
		
		1)inline	with in the opening tag style attribute 
		2)internal	head tag <style>selector{propname:value;propname:value......}</style>
		3)external		link
	
  
  
  style="propname :provalue;proname:propvalue"
  
  
  five selectors
	
		1)element selector		element name {properties}
		2)group selector		more then one element names
		3)all selector			*
		4)id selector			#idname
		5)class selector 		.classname
  
  Bootstrap 
  free source and  open source
  
  angular=>TS+HTML+CSS+SPEC
  
			link bs
  
  CDN
  html-->bs classes bs link
  
     <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css"/>

	https://cdnjs.com/libraries/font-awesome
  
RWD
  
  
  JS:
  ===
  
  Scrpting language 
  
  
  dynamic web pages 
  front end validations onsubmit,onclick,ondblclick
  change html content
  style html content
  
			JS 
			inline
			internal
			external
			
		variables
		datatypes
		functions
		flow control.....
  
  <head>
  <script>
		<internal>
  </script>
  </head>
	<body>
		<script>
				inline
		</script>
  
  </body>
  
  
  .js  external
  
  
  variable-->name of memory location
  
  
	varname =value //dynamic typed 
  
  var/let/const
  
  var varname=value;
  
  var eid=123; number 
  
  
  function addOfTwo(a,b)
  {
  
	return a+b;
  }
  
  document.write("welcome to javascript")
  
  console.log("welcome to browser console")
  
  alert()
  
  
  
  front end validations
  
  
  
  username 		
  password 			
  
			submit
  
  
	username=fisglobal
	password=fisglobal@123
	
	
	alert(login success)
	
	alert(enter valid credentials)
  
  JS
  
  <script src="externalJs.js" />
  
Typescript:
===========
 ts superset of js

JS
	
		TS=JS+Types

	JS -->Dynamic Typed Pl
	TS-->static typed PL
	
			var varname=value
			
			var varname:number=123;
		
		js-->browser 
		
		ts -->js
		
		tsc
		
		node 
		npm install -g typescript
		
		
Angular:
========


angular js  2010 google js framework MVC controllers


angular 2.0 2016 TS-->tsc --->js component


	component-->its building block of angular app



		youtube


angular-->ts+html+css+js

node 
npm

npm install -g @angular/cli


MPA
SPA 


angular cli--->commands

@Component{
selector:"anything";
templateURL:html
stylesurls:.css
}
export class Employee
 {
 
 
 }
			header
			footer
			sidebars 
			body


	ng new demo_app
	
		root component -->app-->html,ts,css,spec.ts



	login
	logout
	register 

		ng serve -o
		
		4200

<router-outlet></router-outlet>

@Component({
  selector: 'fis',
  template: `
  <h2>welcome to india</h2>
  `,
  styles:["h2{background-color:yellow}"]

})

ng new projectname

ng serve -o

		4200
		
app.module.ts-->configuration 

ts
html
css
spec.ts

app.module.ts
app-routing.ts
Component Creation


	ng generate component login

	ng g c login
	
		login.component.ts
		login.component.htmls
		login.component.css
		login.component.spec.ts


	ng g c register --skip-tests true



directives 

	ngFor ,ngIf,ngSwitch

Pipes:transform the data

	predefined pipes
	user defined pipes
	
	
	
		|pipename
	
	
	
	custom pipe--->
	
	ng g c x
	
	ng g p gender --skip-tests true
	
		
	export 	class implements Pipetransform
		
		transform()
		{
		
		
		}
		
event binding,property binding ,two way data binding  [()]
auth guards
@input @output event emitter
		Services -->JSON
		forms

Angular Forms:
==============

		Template driven forms 
		model driven forms (Reactive forms)
		
		
			username fisglobal
				password fis123

		Dependency Injection




auth guards


	canactivate 
	
	
	ng g g auth-guard --skip-tests true



Service--injectable class-->common

	a b c d e
				4200				JSON-server			JAVA
ng g s servicename @Injectable    -->server(java ,python,angular......)

			JSON-->javascript object notation

		HttpClient-->crud
		
			post,get,update,delete



Java:
=======

Programming Language:communication with machine 

Language:communication


		POP 						OOP
B,BCPL,C,COBOL,PHOTON....		JAVA,PYTHON,C++,.NET,LISP.......

					1)performance	inheritance,polymorphisam
					2)security		encapsulation,abstraction
						

JAVA	1995 JDK 1.0 james gosling -->sun micro system---oracle corporation

			 jdk 21

simple
object oriented
portable
PI
Secured
Robust
AN
Interprted 
high performance
multithreaded 
distributed 
dynamic


welcome.java

				machine 
				windows
				
	machine2		machine3		machine4
	linux			ubuntu				mac
	shruthi			meghashayam			amit


WORA

	
PI
	
	
	java

	
 53 -->lowercase 


Identifiers

a name in java classname,var name,method name,obj name interface.....


a-z
A-Z
0-9
$
_

classname,interface -->every word first letter must be capital
method name,s name--->every word first letter must be capital except first word 
constants-->all capital
package name-->lowercase 


Variables,datatypes eclipse

sandeep trainer 

949499494



			age=22
syntax
	 datatype variablename=value;
	 
	 
	 
	 PDT 				NPDT
8 	 				String,array,....
	 
							long age=22; 8 bytes
	byte	1 byte		-128 to 127
	short	2 bytes		-32768 to 32767
	int		4 bytes  	-2147483648 to 2147483647
	long	8 bytes	  -2 power 63 to 2 power 63 -1

	float	4 bytes			float marks=23.5456546456456454f 5 to 6 decimal 
	double	8 bytes 				14 to 15 decimal places
	
	boolean	1 bit 			0-false,1-true
	char 	2 bytes   'M'
	

		C-->ASCII

		a 97,98

		A- 65


		Java-->Unicode 18 international

	
	
	local variables-->inside the method
	global variables	-->instance & static 
	
	
	
	package 
	
by default java.lang package is available for every java file  	
	
	Methods
	variables
	Scanner
	
	
Instance & Static 



syntax:
		static properties need to declare by using static keyword
		if there is no static keyword that is instance

memory:
		instance properties will get memory for every object creation    //memory
		static properties will get memory ONLY ONCE at the time class loading into JVM
			class	A
	
			classname objname=new classname()
	
			javac filename-->.class-->java classname-->jvm-->output

Access:
	
		instance properties can be accessed by using obj reference 
		
		static properties cab be accessed by using classname 

Usage:

			common data to represent choose static like orgname,countryname,statename,.....
			unique data empid,contact,pan,aadhar.....
			





 accessmodifier instance/static returntype methodname(parameters)
 {
 
	return ;
 }












	